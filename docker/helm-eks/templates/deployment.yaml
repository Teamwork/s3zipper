{{- range .Values.deployments }}
{{- $scopeDict := dict "Release" $.Release "Chart" $.Chart "name" .name -}}
---
{{- if .argoRollout }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else if .statefulSet }}
apiVersion: apps/v1
kind: StatefulSet
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "eks.fullname" $scopeDict }}
  labels:
    {{- include "eks.labels" $scopeDict | nindent 4 }}
    {{- include "eks.selectorLabels" $scopeDict | nindent 4 }}
    {{- if and .datadog .datadog.enabled }}
    {{- $ddDict := dict "Chart" $.Chart "name" .name "env" .datadog.env -}}
    {{- include "eks.datadogLabels" $ddDict | nindent 4 }}
    {{- end }}
spec:
  revisionHistoryLimit: {{ .rsLimit | default 5 }}
  {{- if not .scaling.autoscaler }}
  replicas: {{ .scaling.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "eks.selectorLabels" $scopeDict | nindent 6 }}
  {{- if and .argoRollout .argoRollout.strategy }}
  strategy:
    {{- toYaml .argoRollout.strategy | nindent 4 }}
  {{- end }}
  {{- if .statefulSet }}
  {{- if .statefulSet.podManagementPolicy }}
  podManagementPolicy: {{ .statefulSet.podManagementPolicy }}
  {{- end }}
  {{- if .statefulSet.serviceName }}
  serviceName: {{ .statefulSet.serviceName }}
  {{- end }}
  {{- if .statefulSet.updateStrategy }}
  updateStrategy:
    {{ toYaml .statefulSet.updateStrategy | nindent 4}}
  {{- end }}
  {{- end }}
  template:
    metadata:
      {{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "eks.labels" $scopeDict | nindent 8 }}
        {{- include "eks.selectorLabels" $scopeDict | nindent 8 }}
        {{- if and .datadog .datadog.enabled }}
        {{- $ddDict := dict "Chart" $.Chart "name" .name "env" .datadog.env -}}
        {{- include "eks.datadogLabels" $ddDict | nindent 8 }}
        {{- end }}
        {{- with .labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      containers:
        {{- range .containers }}
        - name: {{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .image.pullPolicy | default "IfNotPresent" }}
          {{- if .command }}
          command: {{ .command }}
          {{- end }}
          {{- if .args }}
          args: {{ .args }}
          {{- end }}
          {{- if .ports }}
          ports:
            {{- range .ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
            {{- end }}
          {{- end }}
          {{- if or .env .additionalEnv }}
          env:
            {{- range $index, $value := .env }}
            - name: {{ $index }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .additionalEnv }}
            {{- toYaml .additionalEnv | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if or .configMaps .secrets }}
          envFrom:
            {{- range .configMaps }}
            - configMapRef:
                {{- if .external }}
                name: {{ .name }}
                {{- else }}
                {{- $cmScopeDict := dict "Release" $.Release "Chart" $.Chart "name" .name }}
                name: {{ include "eks.fullname" $cmScopeDict }}
                {{- end }}
                {{- if .optional }}
                optional: true
                {{- end }}
            {{- end }}
            {{- range .secrets }}
            - secretRef:
                {{- if .external }}
                name: {{ .name }}
                {{- else }}
                {{- $secScopeDict := dict "Release" $.Release "Chart" $.Chart "name" .name }}
                name: {{ include "eks.fullname" $secScopeDict }}
                {{- end }}
                {{- if .optional }}
                optional: true
                {{- end }}
            {{- end }}
          {{- end }}
          {{- if .healthchecks }}
          {{- with .healthchecks.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .healthchecks.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .healthchecks.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- with .volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or
        (and .affinity $.Values.nodePool)
        .affinity
        $.Values.nodePool
      }}
      affinity:
      {{- end }}
      {{- if and .affinity .affinity.podAntiAffinity }}
        podAntiAffinity:
          {{- .affinity.podAntiAffinity | toYaml | nindent 12 }}
      {{- end }}
      {{- if $.Values.nodePool }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: dedicated
                    operator: In
                    values:
                      - {{ $.Values.nodePool }}
      tolerations:
        - effect: NoSchedule
          key: dedicated
          operator: Equal
          value: {{ $.Values.nodePool }}
      {{- end }}
      {{- if .topologySpreadConstraints }}
      topologySpreadConstraints:
        - maxSkew: {{ .topologySpreadConstraints.maxSkew }}
          topologyKey: {{ .topologySpreadConstraints.topologyKey }}
          whenUnsatisfiable: {{ .topologySpreadConstraints.whenUnsatisfiable }}
          labelSelector:
            matchLabels:
              {{- include "eks.selectorLabels" $scopeDict | nindent 14 }}
      {{- end }}

{{ end }}
